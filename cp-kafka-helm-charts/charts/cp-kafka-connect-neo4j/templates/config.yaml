apiVersion: v1
kind: ConfigMap
metadata:
  name: neo4j-configure
data:
  neo4j-sink.json: |-
    {
      "name": "neo4j-sink",
      "config":
      {
        "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
        "errors.retry.timeout": "-1",
        "errors.retry.delay.max.ms": "1000",
        "errors.tolerance": "all",
        "errors.log.enable": true,
        "errors.log.include.messages": true,
        "neo4j.server.uri": "bolt://neo4j-neo4j-core-1.promenade.svc:7687",
        "neo4j.authentication.basic.username": "neo4j",
        "neo4j.authentication.basic.password": "password",
        "neo4j.encryption.enabled": false,
        "topics": "Chatillon-Northbound",
        "neo4j.topic.cypher.Chatillon-Northbound": "MERGE ()-[s:STREET {linkId: event.linkId}]->() SET s.avgTravelTime = event.sample.avgTravelTime,s.sdTravelTime = event.sample.sdTravelTime,s.numVehicles = event.sample.numVehicles,s.timestamp = event.timestamp,s.aggPeriod = duration({seconds: event.sample.aggPeriod.seconds,nanoseconds: event.sample.aggPeriod.nanos}),s.startTime = localdatetime({year: event.sample.startTime.date.year,month: event.sample.startTime.date.month,day: event.sample.startTime.date.day,hour: event.sample.startTime.time.hour,minute: event.sample.startTime.time.minute,second: event.sample.startTime.time.second,nanosecond: event.sample.startTime.time.nano}),s.endTime = localdatetime({year: event.sample.endTime.date.year,month: event.sample.endTime.date.month,day: event.sample.endTime.date.day,hour: event.sample.endTime.time.hour,minute: event.sample.endTime.time.minute,second: event.sample.endTime.time.second,nanosecond: event.sample.endTime.time.nano})"
      }
    }