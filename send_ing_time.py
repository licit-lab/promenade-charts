'''
Created on 02 ago 2021

@author: lorenzo
'''
import pandas
import matplotlib.pyplot as pyplt
from matplotlib.ticker import IndexLocator

if __name__ == '__main__':
    
    t_snaps = []
    with open("t_snaps.txt") as f:
        for line in f.readlines():
            t_snaps.append(line.strip())
    t_snaps.insert(0, "2018-09-06T00:00:00")
    t_snaps = t_snaps[:-1]
    
    #In the following instruction replace <file> with the name of the file generated by the script "time_analysis2_par3.py"
    df = pandas.read_csv("<file>.csv", delimiter=";")
        
    df_2 = pandas.read_csv("coverages.csv", delimiter=";")
    
    df = df.sort_values(by=["agg_ts", "ins_ts"]).reset_index(drop=True)
    diffs_1 = []
    prev_idx = 0
    for i in range(5, len(df_2.index), 5):
        diffs_1.append((max(df.iloc[prev_idx:prev_idx+sum(df_2.iloc[i-5:i, 1]),2]) - min(df.iloc[prev_idx:prev_idx+sum(df_2.iloc[i-5:i, 1]),3]))/60000 + 3)
        prev_idx = prev_idx+sum(df_2.iloc[i-5:i, 1])
    
    df = df.sort_values(by=["ins_ts", "agg_ts"]).reset_index(drop=True)
    diffs_0 = []
    prev_idx = 0
    for i in range(5, len(df_2.index),5): 
        diffs_0.append((max(df.iloc[prev_idx:prev_idx+sum(df_2.iloc[i-5:i, 1]),2]) - min(df.iloc[prev_idx:prev_idx+sum(df_2.iloc[i-5:i, 1]),3]))/60000 + 3)
        prev_idx = prev_idx+sum(df_2.iloc[i-5:i, 1])
        
    
    param = 12
    labels = []
    for i in range(0, param):
        labels.append("")
    labels.append(t_snaps[0])
    for i in range(param+1, len(t_snaps)-param):
        labels.append("")
    labels.append(t_snaps[-1])
    for i in range(len(t_snaps)-(param-1), len(t_snaps)):
        labels.append("")
    
    fig = pyplt.figure(1, (7,5))
    ax = pyplt.gca()
    pyplt.plot([x for x in range(0, len(diffs_0))], diffs_0, marker='o', linestyle='-', label=r'$T^{ing}_{[i,i+n]}$ (emulator)')
    pyplt.plot([x for x in range(0, len(diffs_0))], diffs_1, marker='o', linestyle='-', label=r'$T^{ing}_{[i,i+n]}$ (Kafka-MongoDB sink connector)')
    pyplt.hlines(y=18, xmin=0, xmax=len(diffs_0), colors="gray", linestyles="--", label="deadline")
    pyplt.grid(True, alpha=0.75, linestyle='--')
    pyplt.xticks(ticks=[x for x in range(0,len(labels))], labels=labels, rotation='horizontal')
    pyplt.tick_params(axis='x', labelsize=12)
    pyplt.xlabel("15-minutes Time Interval", fontsize=14)
    pyplt.ylabel("Time [min]", fontsize=14)
    pyplt.title("Ingestion Latency", fontsize=16)
    pyplt.legend(bbox_to_anchor=(0.99, 0.9))
    pyplt.margins(x=0.01)
    y_min, y_max = ax.get_ylim()
    pyplt.ylim(y_min, 22)
    fig.tight_layout()
    pyplt.savefig("ing_time_15min.pdf")
    #pyplt.show()
    
    